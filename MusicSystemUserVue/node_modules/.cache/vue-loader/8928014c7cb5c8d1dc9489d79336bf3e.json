{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\src\\pages\\Home.vue?vue&type=style&index=0&id=5a90ec03&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\src\\pages\\Home.vue","mtime":1697859817265},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678981922704},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678981923452},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\postcss-loader\\src\\index.js","mtime":1678981922978},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1678982681431},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678981922231},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\MusicSystem\\src\\MusicSystemUserVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1678981923193}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICIuLi9hc3NldHMvY3NzL2hvbWUuc2NzcyI7DQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA","file":"Home.vue","sourceRoot":"src/pages","sourcesContent":["<!--\r\n * @Description: \r\n * @Author: Rabbiter\r\n * @Date: 2023-03-16 01:26:34\r\n-->\r\n<template>\r\n    <div class=\"home\">\r\n        <swiper />\r\n        <div class=\"section\" v-for=\"(item, index) in songsList\" :key=\"index\">\r\n            <div class=\"section-title\"><i :class=\"item.icon\" style=\"font-size: 34px;\"></i><b style=\"font-size: 32px;\"> {{ item.name }}</b></div>\r\n            <content-list :contentList=\"item.list\"></content-list>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Swiper from \"../components/Swiper\";\r\nimport contentList from \"../components/ContentList\";\r\nimport { getAllSinger, getAllSongList } from \"../api/index\";\r\nexport default {\r\n    name: \"home\",\r\n    components: {\r\n        Swiper,\r\n        contentList,\r\n    },\r\n    data() {\r\n        return {\r\n            songsList: [\r\n                { name: \"歌单\", list: [], icon:\"iconfont icon-r-paper\" },\r\n                { name: \"歌手\", list: [], icon:\"iconfont icon-r-love\" },\r\n            ],\r\n        };\r\n    },\r\n    created() {\r\n        this.getSongList();\r\n        this.getSinger();\r\n    },\r\n    methods: {\r\n        getSongList() {\r\n            //获取前十条歌单\r\n            getAllSongList()\r\n                .then((res) => {\r\n                    this.songsList[0].list = res.slice(0, 10);\r\n                })\r\n                .catch((e) => {\r\n                    if (e.data == undefined) {\r\n                        if (\r\n                            e ==\r\n                            \"TypeError: Cannot read properties of undefined (reading 'status')\"\r\n                        ) {\r\n                            e = \"Network Error\";\r\n                        }\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: e,\r\n                            type: \"error\",\r\n                            duration: 5000,\r\n                        });\r\n                    } else {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: e.data,\r\n                            type: \"error\",\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                });\r\n        },\r\n        getSinger() {\r\n            //获取前十名歌手\r\n            getAllSinger()\r\n                .then((res) => {\r\n                    this.songsList[1].list = res.slice(0, 10);\r\n                })\r\n                .catch((e) => {\r\n                    if (e.data == undefined) {\r\n                        if (\r\n                            e ==\r\n                            \"TypeError: Cannot read properties of undefined (reading 'status')\"\r\n                        ) {\r\n                            e = \"Network Error\";\r\n                        }\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: e,\r\n                            type: \"error\",\r\n                            duration: 5000,\r\n                        });\r\n                    } else {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: e.data,\r\n                            type: \"error\",\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/css/home.scss\";\r\n</style>\r\n"]}]}